#!/usr/bin/env python

import yaml
import jinja2
from slugify import slugify 
#from html5print import HTMLBeautifier
#from bs4 import BeautifulSoup
import datetime
import markdown

from googletrans import Translator

jinja_env = jinja2.Environment(
  autoescape = True,
  loader = jinja2.FileSystemLoader( searchpath = "./templates" )
)

def slug(value):
    return slugify( value)
jinja_env.filters['slug'] = slug

def md(value):
    return markdown.markdown(value)
jinja_env.filters['md'] = md

# def parrafos(original):
#     """ Remover párrafos vacíos"""
#     parrafos = original.split('\n')
#     o = ''
#     for parrafo in parrafos:
#       if parrafo:
#         o += '<p>' + parrafo + '</p>'
#     return o
# jinja_env.filters['parrafos'] = parrafos

template = jinja_env.get_template( 'base.html' )
template.globals['now'] = datetime.datetime.utcnow

contenido = yaml.load(
  open( 'contenido.yml', 'r' ),
  Loader = yaml.FullLoader
)


feo =  template.render( contenido = contenido ) 

# HTMLBeautifier con bardos
# lindo = HTMLBeautifier.beautify( feo, 4) 
# alternativa: BeautifulSoup (falta probar)  
# lindo = BeautifulSoup( feo , "lxml" )
# print(lindo.prettify())

with open( 'build/index.html', "w" ) as tex:
  tex.write( feo )


# class literal(str): pass
# 
# def literal_presenter(dumper, data):
#     return dumper.represent_scalar('tag:yaml.org,2002:str', data, style='|')
# 
# yaml.add_representer(literal, literal_presenter)
# 
content = {} 
translator = Translator()
def traducir(original, destino):
   d = destino
   ti = ''
   te = ''
   tii = ''
   tei = ''
   el = [] 

   if('elementos' in d):
     el = d['elementos'] 

   #if('elementos' in original):
     #el = original['elementos']

   if('titulo' in original):
     ti = original['titulo']
     tii = translator.translate(ti, src='es', dest='pt').text
     print(tii)

   if('texto' in original):
     te = original['texto']
     tei = translator.translate(te, src='es', dest='pt').text
     print(tei)
   #  #l =  literal(  tei  ) 
   #  #destino['texto'] =  l 
   print("#"*40)

   if isinstance( el , dict ):
     el['titulo'] = ti
     #d['elementos'] = el 
     #d['texto'] = te

   if isinstance( el, list ):
     elemento = {}
     elemento['titulo'] = ti
     #elemento['elementos'] = el 
     #elemento['texto'] = te
     el.append( elemento )

   if( 'elementos' in original):
      for e in original['elementos']:
         traducir( e, d )
traducir(contenido, content)
#
#with open(r'content.yml', 'w') as file:
#    documents = yaml.dump(content, file)



